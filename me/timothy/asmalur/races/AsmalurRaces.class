ackage me.timothy.asmalur.races;

import java.util.logging.Logger;
import me.timothy.asmalur.races.api.PlayerRaceInfo;
import me.timothy.asmalur.races.api.RacesAPI;
import me.timothy.asmalur.races.commands.Commands;
import me.timothy.asmalur.races.listeners.ConnectionListener;
import me.timothy.asmalur.races.listeners.LoreNameReplacement;
import me.timothy.asmalur.races.listeners.PeaceZoneHandler;
import org.bukkit.Server;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.PluginManager;
import org.bukkit.plugin.java.JavaPlugin;

public class AsmalurRaces extends JavaPlugin
{
  private ConnectionListener connListener;
  private LoreNameReplacement loreNameReplacer;
  private PeaceZoneHandler peaceZoneHandler;

  public void onEnable()
  {
    Commands.setPlugin(this);
    GMHook.instance = new GMHook(this);
    PluginManager pm = getServer().getPluginManager();
    this.connListener = new ConnectionListener();
    this.loreNameReplacer = new LoreNameReplacement();
    this.peaceZoneHandler = new PeaceZoneHandler();
    this.loreNameReplacer.loadExempt(getConfig());
    pm.registerEvents(this.connListener, this);
    pm.registerEvents(this.loreNameReplacer, this);
    pm.registerEvents(this.peaceZoneHandler, this);
    getLogger().info("Enabled!");
  }

  public void onDisable()
  {
    getLogger().info("Disabled");
  }

  public void onLoad()
  {
    super.onLoad();
    doCustomLoad();
  }

  public void reloadConfig()
  {
    super.reloadConfig();
    doCustomLoad();
  }

  public boolean onCommand(CommandSender sender, Command command, String label, String[] args)
  {
    String str;
    switch ((str = command.getName()).hashCode()) { case -1270136232:
      if (str.equals("clearname"));
      break;
    case -747274046:
      if (str.equals("ardebug"));
      break;
    case -713731029:
      if (str.equals("cleartitle"));
      break;
    case 3381091:
      if (str.equals("nick"));
      break;
    case 3492561:
      if (str.equals("race")) break; break;
    case 110371416:
      if (str.equals("title"));
      break;
    case 113107304:
      if (str.equals("whois"));
      break;
    case 1985873459:
      if (str.equals("setrace"));
      break;
    case 2043258502:
      if (!str.equals("convertdnc")) { break label308;

        Commands.handleRace(sender, command, label, args);
        break label316;

        Commands.handleSetRace(sender, command, label, args);
        break label316;

        Commands.handleSetName(sender, command, label, args);
        break label316;

        Commands.handleClearNick(sender, command, label, args);
        break label316;

        Commands.handleTitle(sender, command, label, args);
        break label316;

        Commands.handleClearTitle(sender, command, label, args);
        break label316;

        Commands.handleDebug(sender, command, label, args);
        break label316;

        Commands.handleWhois(sender, command, label, args);
        break label316;
      } else {
        Commands.handleConvertDNC(sender, command, label, args);
      }break;
    }
    label308: sender.sendMessage("Go yell at Tjstretchalot to implement that command");

    label316: return true;
  }
  private void doCustomLoad() {
    if (this.loreNameReplacer != null)
      this.loreNameReplacer.loadExempt(getConfig());
    RacesAPI.load(this, "plugins/" + getName() + "/");

    Player[] online = getServer().getOnlinePlayers();
    for (Player p : online) {
      PlayerRaceInfo pri = RacesAPI.getRaceInfo(p);
      pri.apply(p);
    }
  }

  public void saveConfig()
  {
    this.loreNameReplacer.saveExempt(getConfig());
    super.saveConfig();
  }
}
